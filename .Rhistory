#removing ingesamt from higherobs_unit
(Higherobs_unit1 <- Higherobs_unit %>% filter(row_number() <= n()-1))
#plotting
ggplot(tidydata_higherobs, aes(x = (employed_male,employed_female), y = cases, fill = age)) +
geom_col(position = "dodge")
#plotting
ggplot(tidydata_higherobs, aes(x = category, y = cases, fill = age)) +
geom_col(position = "dodge")
#pivot longer
tidydata_higherobs1 <- Higherobs_unit1 %>%
pivot_longer(employed_male:inactive_male, names_to = "male_category", values_to = "cases")
tidydata_higherobs2 <- Higherobs_unit1 %>%
pivot_longer(employed_male:inactive_male, names_to = "male_category", values_to = "cases")
tidydata_higherobs2 <- Higherobs_unit1 %>%
pivot_longer(employed_female:inactive_female, names_to = "female_category", values_to = "cases")
lowerobs_unit
lowerobs_unit1<- filter(censusdata1, region_id == "05170")
#visualization
ggplot(tidydata_higherobs, aes(employed_male, employed_female, colour = cases)) +
geom_point()
#visualization
ggplot(lowerobs_unit1, aes(employed_male, employed_female, colour = cases)) +
geom_point()
#visualization
ggplot(lowerobs_unit1, aes(employed_male, employed_female)) +
geom_point()
#visualization
ggplot(lowerobs_unit1, aes(employed_male, employed_female, class = age)) +
geom_point()
ggplot(lowerobs_unit1, aes(employed_male, employed_female, class = age)) +
geom_point()
#visualization
ggplot(lowerobs_unit1, aes(employed_male, employed_female, shape = age)) +
geom_point()
#visualization
ggplot(lowerobs_unit1, aes(employed_male, employed_female, color = age)) +
geom_point()
summary(rule1)
#filtering the data for single region in lowerobs_unit dataframe
(lowerobs_unit1<- filter(lowerobs_unit, region_id == "05170"))
#list the environment variable
ls()
#remove the list variables
rm(list = ls())
#check for the variables in the environment
ls()
#get the working directory
getwd()
library(tidyverse)
#reading the file dropping first 6 rows consisting of meta data
censusdata <- read.csv2('census_2011_mod.csv', skip = 6)
#removing last 5 unnecessary rows with filter function
(censusdata1 <- censusdata %>% filter(row_number() <= n()-5))
#Separating two observational units
Higherobs_unit <- filter(censusdata1, region_id == "05154")
View(Higherobs_unit)
#if not region id ==05154
lowerobs_unit <- filter(censusdata1, region_id != "05154")
#filtering the data for single region in lowerobs_unit dataframe
(lowerobs_unit1<- filter(lowerobs_unit, region_id == "05170"))
View(lowerobs_unit1)
#tidying the data
#removing ingesamt from higherobs_unit
(Higherobs_unit1 <- Higherobs_unit %>% filter(row_number() <= n()-1))
#pivoting
tidydata_higherobs1 <- Higherobs_unit1 %>%
pivot_longer(employed_male:inactive_female, names_to = "category", values_to = "cases")
#visualization of tidydata_higherobs1
ggplot(tidydata_higherobs1, aes(x = category, y = cases, fill = age)) +
geom_col(position = "dodge")
() <=
(lowerobs_unit1 <- lowerobs_unit1 %>% filter(row_number() <= n()-1))
View(lowerobs_unit1)
View(tidydata_higherobs1)
#visualization of tidydata_higherobs1
ggplot(tidydata_higherobs1, aes(x = category, y = cases, fill = age)) +
geom_col(position = "dodge")
#visualization for tidydata in lowerobs_unit1
ggplot(lowerobs_unit1, aes(employed_male, employed_female, color = age)) +
geom_point()
#visualization for tidydata in lowerobs_unit1
ggplot(lowerobs_unit1, aes(employed_male, employed_female, shape = age)) +
geom_point()
#visualization for tidydata in lowerobs_unit1
ggplot(lowerobs_unit1, aes(employed_male, employed_female)) +
geom_point()
#visualization for tidydata in lowerobs_unit1
ggplot(lowerobs_unit1, aes(employed_male, age)) +
geom_point()
View(lowerobs_unit1)
#visualization for tidydata in lowerobs_unit1
lowerobs_unit1[lowerobs_unit1 == "x"] = NA
ggplot(lowerobs_unit1, aes(employed_male, age)) +
geom_point()
ggplot(lowerobs_unit1, aes(employed_male, age)) +
geom_point()
View(lowerobs_unit1)
#visualization of tidydata_higherobs1
tidydata_higherobs1[tidydata_higherobs1 == "x"] = NA
ggplot(tidydata_higherobs1, aes(x = category, y = cases, fill = age)) +
geom_col(position = "dodge")
na.omit(lowerobs_unit1)
ggplot(lowerobs_unit1, aes(employed_male, age)) +
geom_point()
lowerobs_unit1
ggplot(lowerobs_unit1, aes(employed_male, age, na.rm = TRUE)) +
geom_point()
ggplot(lowerobs_unit1, aes(employed_male, age, na.rm = TRUE)) +
geom_point()
ggplot(lowerobs_unit1, aes(employed_male, age)) +
geom_point(na.rm = TRUE)
View(tidydata_higherobs1)
#list the environment variable
ls()
#remove the list variables
rm(list = ls())
#check for the variables in the environment
ls()
#get the working directory
getwd()
library(tidyverse)
#reading the file dropping first 6 rows consisting of meta data
censusdata <- read.csv2('census_2011_mod.csv', skip = 6)
#removing last 5 unnecessary rows with filter function
(censusdata1 <- censusdata %>% filter(row_number() <= n()-5))
#checking the dimension of the censusdata1
dim(censusdata1)
#structure of the data
str(censusdata1)
#Separating two observational units
Higherobs_unit <- filter(censusdata1, region_id == "05154")
(lowerobs_unit <- filter(censusdata1, region_id != "05154"))
#filtering the data for single region in lowerobs_unit dataframe
(lowerobs_unit<- filter(lowerobs_unit, region_id == "05170"))
View(Higherobs_unit)
(Higherobs_unit1 <- select(Higherobs_unit1, age, employed_male, employed_female)
Higherobs_unit1
(Higherobs_unit1 <- select(Higherobs_unit1, age, employed_male, employed_female)
View(Higherobs_unit)
(Higherobs_unit1 <- select(Higherobs_unit1, age, employed_male, employed_female))
(Higherobs_unit1 <- select(Higherobs_unit1, age, employed_male, employed_female))
Higherobs_unit1 <- select(Higherobs_unit1, age, employed_male, employed_female)
select(Higherobs_unit1, age, employed_male, employed_female)
#tidying the data
#removing ingesamt from higherobs_unit
(Higherobs_unit1 <- Higherobs_unit %>% filter(row_number() <= n()-1))
select(Higherobs_unit1, age, employed_male, employed_female)
Higherobs_unit1 <- filter(Higherobs_unit1, employed_male != "X" & employed_female !="x")
Higherobs_unit1
#tidying the data
#removing ingesamt from higherobs_unit
(Higherobs_unit1 <- Higherobs_unit %>% filter(row_number() <= n()-1))
Higherobs_unitfiltered <- filter(Higherobs_unit1, employed_male != "X" & employed_female !="x")
View(Higherobs_unit1)
View(Higherobs_unitfiltered)
Higherobs_unitselect <- select(Higherobs_unit1, age, employed_male, employed_female)
View(lowerobs_unit)
View(Higherobs_unitselect)
Higherobs_unitfiltered <- filter(Higherobs_unitselect, employed_male != "X" & employed_female !="x")
Higherobs_unitfiltered
ggplot(Higherobs_unitfiltered, aes(x = category, y = cases, fill = age)) +
geom_col(position = "dodge")
ggplot(Higherobs_unitfiltered, aes(x = age, fill = c(employed_male, employed_female))) +
geom_col(position = "dodge")
#pivoting
tidydata_higherobs <- Higherobs_unitfiltered %>%
pivot_longer(employed_male:employed_female, names_to = "category", values_to = "age")
#pivoting
tidydata_higherobs <- Higherobs_unitfiltered %>%
pivot_longer(employed_male:employed_female, names_to = "category", values_to = "cases")
View(tidydata_higherobs)
tidydata_higherobs1 <- tidydata_higherobs %>% pivot_wider(names_from = age, values_from = count)
tidydata_higherobs1 <- tidydata_higherobs %>% pivot_wider(names_from = category, values_from = count)
tidydata_higherobs1 <- tidydata_higherobs %>% pivot_wider(names_from = age, values_from = cases)
View(tidydata_higherobs1)
View(tidydata_higherobs1)
ggplot(tidydata_higherobs1, aes(x = category)) +
geom_col(position = "dodge")
ggplot(tidydata_higherobs1, aes(x = tidydata_higherobs, y=cases, fill=age)) +
geom_col(position = "dodge")
ggplot(tidydata_higherobs, aes(x = tidydata_higherobs, y=cases, fill=age)) +
geom_col(position = "dodge")
ggplot(tidydata_higherobs, aes(x = category, y=cases, fill=age)) +
geom_col(position = "dodge")
ggplot(tidydata_higherobs, aes(x = age, y=cases, fill=category)) +
geom_col(position = "dodge")
tidydata_higherobs<-replace(tidydata_higherobs$age, tidydata_higherobs$age="bis unter",-)
tidydata_higherobs<-replace(tidydata_higherobs$age, tidydata_higherobs$age=="bis unter",-)
tidydata_higherobs$age <- gsub('bis unter', '-', tidydata_higherobs$age)
View(tidydata_higherobs)
ggplot(tidydata_higherobs, aes(x = age, y=cases, fill=category)) +
geom_col(position = "dodge")
tidydata_higherobs$age <- gsub('Jahre', 'age', tidydata_higherobs$age)
ggplot(tidydata_higherobs, aes(x = age, y=cases, fill=category)) +
geom_col(position = "dodge")
View(Higherobs_unitselect)
View(lowerobs_unit)
View(Higherobs_unitfiltered)
View(lowerobs_unit)
#selecting only rows for visualization in lowerobs_unit1
lowerobs_unit1 <- select(lowerobs_unit1, age, employed_male, employed_female, unemployed_male, unemployed_female)
#list the environment variable
ls()
#remove the list variables
rm(list = ls())
#check for the variables in the environment
ls()
#get the working directory
getwd()
library(tidyverse)
#reading the file dropping first 6 rows consisting of meta data
censusdata <- read.csv2('census_2011_mod.csv', skip = 6)
#reading the file dropping first 6 and last 5 rows consisting of meta data
censusdata <- read.csv2('census_2011_mod.csv', skip = 6)
censusdata <- censusdata %>% filter(row_number() <= n()-5)
View(censusdata)
censusdata
#structure of the data
str(censusdata1)
#structure of the data
str(censusdata)
#substituting characters in column age
censusdata1$age <- gsub('bis unter', '-', censusdata1$age)
#substituting characters in column age
censusdata$age <- gsub('bis unter', '-', censusdata$age)
View(censusdata)
censusdata$age <- gsub('Jahre', 'age', censusdata$age)
View(censusdata)
#Separating two observational units
Higherobs_unit <- filter(censusdata, region_id == "05154")
View(Higherobs_unit)
lowerobs_unit<- filter(lowerobs_unit, region_id == "05170")
lowerobs_unit<- filter(censusdata, region_id == "05170")
View(lowerobs_unit)
lowerobs_unit
#removing ingesamt from higherobs_unit and lowerobs_unit
(Higherobs_unit1 <- Higherobs_unit %>% filter(row_number() <= n()-1))
View(Higherobs_unit1)
(lowerobs_unit1 <- lowerobs_unit1 %>% filter(row_number() <= n()-1))
(lowerobs_unit1 <- lowerobs_unit %>% filter(row_number() <= n()-1))
View(lowerobs_unit1)
#selecting two rows for visualization in Higherobs_unit1
Higherobs_unitselect <- select(Higherobs_unit1, age, employed_male, employed_female)
View(Higherobs_unitselect)
#removing rows with "x" values
Higherobs_unitfiltered <- filter(Higherobs_unitselect, employed_male != "X" & employed_female !="x")
View(Higherobs_unitselect)
View(Higherobs_unit1)
View(Higherobs_unitselect)
#removing rows with "x" values
Higherobs_unitfiltered <- filter(Higherobs_unitselect, employed_male != "X" & employed_female !="x")
Higherobs_unitfiltered
View(Higherobs_unitfiltered)
#pivoting to form columns category and cases
tidydata_higherobs <- Higherobs_unitfiltered %>%
pivot_longer(employed_male:employed_female, names_to = "category", values_to = "cases")
View(tidydata_higherobs)
#pivoting to form columns category and cases
tidydata_higherobs <- Higherobs_unitfiltered %>%
pivot_longer(employed_male:employed_female, names_to = "category", values_to = "cases")
#pivoting to form columns category and cases
first_observation <- Higherobs_unitfiltered %>%
pivot_longer(employed_male:employed_female, names_to = "category", values_to = "cases")
View(first_observation)
ggplot(first_observation, aes(x = age, y=cases, fill=category)) +
geom_col(position = "dodge")
#selecting only rows for visualization in lowerobs_unit1
lowerobs_unit1 <- select(lowerobs_unit1, age, employed_male, employed_female, unemployed_male, unemployed_female)
View(lowerobs_unit1)
#pivoting
lowerobs_unit1 <- lowerobs_unit1 %>%
pivot_longer(employed_male:unemployed_female, names_to = "category", values_to = "cases")
View(lowerobs_unit)
View(lowerobs_unit1)
#selecting only rows for visualization in lowerobs_unit1
lowerobs_unit1 <- select(lowerobs_unit1, age, employed_male, employed_female, unemployed_male, unemployed_female)
(lowerobs_unit1 <- lowerobs_unit %>% filter(row_number() <= n()-1))
#selecting only rows for visualization in lowerobs_unit1
lowerobs_unit1 <- select(lowerobs_unit1, age, employed_male, employed_female, unemployed_male, unemployed_female)
View(lowerobs_unit1)
#pivoting
lowerobs_unit1 <- lowerobs_unit1 %>%
pivot_longer(employed_male:unemployed_female, names_to = "category", values_to = "cases")
View(lowerobs_unit1)
(lowerobs_unit1 <- lowerobs_unit %>% filter(row_number() <= n()-1))
lowerobs_unit1$cases <- gsub('x', 0, lowerobs_unit1$cases)
#pivoting
lowerobs_unit1 <- lowerobs_unit1 %>%
pivot_longer(employed_male:unemployed_female, names_to = "category", values_to = "cases")
lowerobs_unit1$cases <- gsub('x', 0, lowerobs_unit1$cases)
View(lowerobs_unit1)
ggplot(lowerobs_unit1, aes(x = cases, colour = category)) +
facet_wrap(vars(age), ncol = 3) +
geom_point(stat = "count") +
geom_line(stat = "count") +
labs(x = "Response (on a 1 to 5 scale)", y = "Number of respondents")
ggplot(lowerobs_unit1, aes(category, cases, age)) +
geom_point()
ggplot(lowerobs_unit1, aes(age, cases, shape=category)) +
geom_point()
ggplot(first_observation, aes(x = category, y=cases, fill=age)) +
geom_col(position = "dodge")
ggplot(first_observation, aes(x = age, y=cases, fill=category)) +
geom_col(position = "dodge")
second_observation$cases <- gsub('x', 0, lowerobs_unit1$cases)
second_observation <- lowerobs_unit1$cases <- gsub('x', 0, lowerobs_unit1$cases)
ggplot(second_observation, aes(x = age, y=cases, fill=category)) +
geom_col(position = "dodge")
ggplot(second_observation, aes(x = age, y=cases)) +
geom_col(position = "dodge")
#selecting only rows for visualization in lowerobs_unit1
lowerobs_unit1 <- select(lowerobs_unit1, age, employed_male, employed_female, unemployed_male, unemployed_female)
(lowerobs_unit1 <- lowerobs_unit %>% filter(row_number() <= n()-1))
#selecting only rows for visualization in lowerobs_unit1
lowerobs_unit1 <- select(lowerobs_unit1, age, employed_male, employed_female, unemployed_male, unemployed_female)
#pivoting
lowerobs_unit1 <- lowerobs_unit1 %>%
pivot_longer(employed_male:unemployed_female, names_to = "category", values_to = "cases")
second_observation <- lowerobs_unit1$cases <- gsub('x', 0, lowerobs_unit1$cases)
ggplot(second_observation, aes(x = age, y=cases)) +
geom_col(position = "dodge")
ggplot(second_observation, aes(x = category, y=cases)) +
geom_col(position = "dodge")
second_observation
second_observation <- lowerobs_unit1$cases <- gsub('x', '0', lowerobs_unit1$cases)
second_observation
(lowerobs_unit1 <- lowerobs_unit %>% filter(row_number() <= n()-1))
#selecting only rows for visualization in lowerobs_unit1
lowerobs_unit1 <- select(lowerobs_unit1, age, employed_male, employed_female, unemployed_male, unemployed_female)
View(lowerobs_unit1)
#pivoting
lowerobs_unit1 <- lowerobs_unit1 %>%
pivot_longer(employed_male:unemployed_female, names_to = "category", values_to = "cases")
View(lowerobs_unit1)
second_observation <- lowerobs_unit1$cases <- gsub(x, 0, lowerobs_unit1$cases)
second_observation <- lowerobs_unit1$cases[lowerobs_unit1$cases] <- 0
second_observation
str(lowerobs_unit1)
lowerobs_unit1$cases <- gsub('x', '0', lowerobs_unit1$cases)
View(lowerobs_unit)
View(lowerobs_unit)
lowerobs_unit1
lowerobs_unit1 <- as.numeric(lowerobs_unit1$cases)
lowerobs_unit1
#pivoting
lowerobs_unit1 <- lowerobs_unit1 %>%
pivot_longer(employed_male:unemployed_female, names_to = "category", values_to = "cases")
(lowerobs_unit1 <- lowerobs_unit %>% filter(row_number() <= n()-1))
#selecting only rows for visualization in lowerobs_unit1
lowerobs_unit1 <- select(lowerobs_unit1, age, employed_male, employed_female, unemployed_male, unemployed_female)
View(lowerobs_unit1)
#pivoting
lowerobs_unit1 <- lowerobs_unit1 %>%
pivot_longer(employed_male:unemployed_female, names_to = "category", values_to = "cases")
View(lowerobs_unit1)
#pivoting
second_observation <- lowerobs_unit1 %>%
pivot_longer(employed_male:unemployed_female, names_to = "category", values_to = "cases")
#selecting only rows for visualization in lowerobs_unit1
lowerobs_unit1 <- select(lowerobs_unit1, age, employed_male, employed_female, unemployed_male, unemployed_female)
(lowerobs_unit1 <- lowerobs_unit %>% filter(row_number() <= n()-1))
#selecting only rows for visualization in lowerobs_unit1
lowerobs_unit1 <- select(lowerobs_unit1, age, employed_male, employed_female, unemployed_male, unemployed_female)
#pivoting
second_observation <- lowerobs_unit1 %>%
pivot_longer(employed_male:unemployed_female, names_to = "category", values_to = "cases")
ggplot(second_observation, aes(x = age, y=cases, fill=category)) +
geom_col(position = "dodge")
ggplot(second_observation, aes(age ,cases, colour = category)) + geom_line()
#selecting only rows for visualization in lowerobs_unit1
lowerobs_unit1 <- select(lowerobs_unit1, age, employed_male, employed_female, unemployed_male, unemployed_female)
View(lowerobs_unit1)
lowerobs_unit1 <- as.numeric(lowerobs_unit1$cases)
lowerobs_unit1
second_observation$cases <- as.numeric(gsub("x", 0, second_observation$cases)))
second_observation$cases <- as.numeric(gsub("x", 0, second_observation$cases)
View(second_observation)
second_observation$cases <- as.numeric(gsub("x", 0, second_observation$cases))
View(second_observation)
ggplot(second_observation, aes(age ,cases, colour = category)) + geom_line()
ggplot(second_observation, aes(x = age, y=cases, fill=category)) +
geom_col(position = "dodge")
#reading the file dropping first 6 consisting of meta data
censusdata <- read.csv2('census_2011_mod.csv', skip = 6)
#dropping last 5 unnecessary rows with filter function
censusdata <- censusdata %>% filter(row_number() <= n()-5)
#substituting characters in column age
censusdata$age <- gsub('bis unter', '-', censusdata$age)
censusdata$age <- gsub('Jahre', '', censusdata$age)
#Separating two observational units
Higherobs_unit <- filter(censusdata, region_id == "05154")
lowerobs_unit<- filter(censusdata, region_id == "05170")
#removing ingesamt from higherobs_unit and lowerobs_unit
(Higherobs_unit1 <- Higherobs_unit %>% filter(row_number() <= n()-1))
(lowerobs_unit1 <- lowerobs_unit %>% filter(row_number() <= n()-1))
#selecting two rows for visualization in Higherobs_unit1
Higherobs_unitselect <- select(Higherobs_unit1, age, employed_male, employed_female)
#removing rows with "x" values
Higherobs_unitfiltered <- filter(Higherobs_unitselect, employed_male != "X" & employed_female !="x")
#pivoting to form columns category and cases
first_observation <- Higherobs_unitfiltered %>%
pivot_longer(employed_male:employed_female, names_to = "category", values_to = "cases")
ggplot(first_observation, aes(x = age, y=cases, fill=category)) +
geom_col(position = "dodge")
#selecting only rows for visualization in lowerobs_unit1
lowerobs_unit1 <- select(lowerobs_unit1, age, employed_male, employed_female, unemployed_male, unemployed_female)
#pivoting
second_observation <- lowerobs_unit1 %>%
pivot_longer(employed_male:unemployed_female, names_to = "category", values_to = "cases")
#replacing x values with numeric zero in column cases
second_observation$cases <- as.numeric(gsub("x", 0, second_observation$cases))
ggplot(second_observation, aes(age ,cases, colour = category)) + geom_line()
ggplot(second_observation, aes(x = age, y=cases, fill=category)) +
geom_col(position = "dodge")
ggplot(second_observation, aes(x = category, y=cases)) +
geom_col(position = "dodge")
#list the environment variable
ls()
#remove the list variables
rm(list = ls())
#check for the variables in the environment
ls()
#get the working directory
getwd()
library(tidyverse)
#reading the file dropping first 6 consisting of meta data
censusdata <- read.csv2('census_2011_mod.csv', skip = 6)
#dropping last 5 unnecessary rows with filter function
censusdata <- censusdata %>% filter(row_number() <= n()-5)
#structure of the data
str(censusdata)
#substituting characters in column age
censusdata$age <- gsub('bis unter', '-', censusdata$age)
censusdata$age <- gsub('Jahre', '', censusdata$age)
#Separating two observational units
Higherobs_unit <- filter(censusdata, region_id == "05154")
lowerobs_unit<- filter(censusdata, region_id == "05170")
#removing ingesamt from higherobs_unit and lowerobs_unit
(Higherobs_unit1 <- Higherobs_unit %>% filter(row_number() <= n()-1))
(lowerobs_unit1 <- lowerobs_unit %>% filter(row_number() <= n()-1))
#selecting two rows for visualization in Higherobs_unit1
Higherobs_unitselect <- select(Higherobs_unit1, age, employed_male, employed_female)
#removing rows with "x" values
Higherobs_unitfiltered <- filter(Higherobs_unitselect, employed_male != "X" & employed_female !="x")
#pivoting to form columns category and cases
first_observation <- Higherobs_unitfiltered %>%
pivot_longer(employed_male:employed_female, names_to = "category", values_to = "cases")
#visualization of first_observation
ggplot(first_observation, aes(x = age, y=cases, fill=category)) +
geom_col(position = "dodge")
#selecting only rows for visualization in lowerobs_unit1
lowerobs_unit1 <- select(lowerobs_unit1, age, employed_male, employed_female, unemployed_male, unemployed_female)
#pivoting
second_observation <- lowerobs_unit1 %>%
pivot_longer(employed_male:unemployed_female, names_to = "category", values_to = "cases")
#replacing x values with numeric zero in column cases
second_observation$cases <- as.numeric(gsub("x", 0, second_observation$cases))
#visualization for tidydata in second_observation
ggplot(second_observation, aes(x = age, y=cases, fill=category)) +
geom_col(position = "dodge")
#removing the environment variables
ls()
rm(list = ls())
ls()
#setting the working directory
getwd()
setwd("F:/R-Data-Mining/Assignment 2")
getwd()
#loading the package for data manipulation, tidy and visualization
library(tidyverse)
library(arules)
library(arulesViz)
#importing data
marketdata <- read.csv2('exercise_WS2020_data.csv')
marketdata
#converting basket as a factor
marketdata$article_group <- factor(marketdata$article_group)
#converting baskets into different kinds of objects
shopping_basket <- split(marketdata$article_group,marketdata$basket_id)
shopping_basket
retail_transactions <- as(shopping_basket, "transactions")
summary(retail_transactions)
#items frequency plot
itemFrequencyPlot(retail_transactions, topN=30, type='absolute')
#using association rules
rule1 <- apriori(retail_transactions, parameter = list(supp=0.001, conf=0.1))
rule1 <- sort(rule1, by='confidence', decreasing = TRUE)
#sorting rule1 generated by apriori algorithm in decreasing confidence value
rule1 <- sort(rule1, by='confidence', decreasing = TRUE)
View(rule1)
summary(rule1)
inspect(rule1)
#items frequency plot
itemFrequencyPlot(retail_transactions, topN=30, type='absolute')
summary(retail_transactions)
summary(rule1)
#inspecting association rules
inspect(rule1)
#using association rules
rule1 <- apriori(retail_transactions, parameter = list(supp=0.001, conf=0.8))
#using association rules
rule1 <- apriori(retail_transactions, parameter = list(supp=0.001, conf=0.1))
#using association rules
rule1 <- apriori(retail_transactions, parameter = list(supp=0.001, conf=0.01))
#sorting rule1 generated by apriori algorithm in decreasing confidence value
rule1 <- sort(rule1, by='confidence', decreasing = TRUE)
#inspecting association rules
inspect(rule1)
#using association rule with different support and confidence
rule2 <- apriori(retail_transactions, parameter = list(supp=0.002, conf=0.2))
plot(rules, measure = c("support", "lift"), shading = "confidence")
plot(rule2, measure = c("support", "lift"), shading = "confidence")
